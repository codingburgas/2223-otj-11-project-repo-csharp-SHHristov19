@model Univers.Models.Models.ChangePasswordModel

@{
    Layout = "../_StudentMenu.cshtml";
    TempData["Id"] = Model.StudentId;
    TempData["Title"] = "Смяна на парола";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

<style>
    body {
        background: #5349E3;
    } 
</style>

<div style="max-width: 90%; margin-left: 3%; margin-right: 3%; margin-top: 2%;"> 

    @if(ViewBag.Message != null)
    { 
        <div class="modal fade position-absolute" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Съобщение</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @ViewBag.Message
                        @{ ViewBag.Message = null;}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Затвори</button> 
                    </div>
                </div>
            </div>
        </div> 
    }

    <div class="container text-center">
        <div class="row"> 
            @Html.ActionLink("Смяна на парола", "ChangePassword", "Student", new { studentId = Model.StudentId}, new { @class = "col fs-3 btn active btn-lg rounded-5" })
            @Html.ActionLink("Смяна на потребителско име", "ChangeUsername", "Student", new { studentId = Model.StudentId}, new { @class = "col fs-3 btn btn-lg rounded-5" })
        </div>
    </div>

    <div class="w-50 p-3 position-absolute top-50 start-50 translate-middle">
        @using (Html.BeginForm("NewPassword", "Student", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.StudentId)
            <h1 class="h3 mb-3 fw-normal text-center">Смяна на парола</h1>
            <div class="form-floating"> 
            
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @id="floatingPassword", placeholder="Password"}) 
                @Html.LabelFor(model => model.Password)
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-floating"> 
            
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", @id="floatingPassword", placeholder="Password"})
                @Html.LabelFor(model => model.NewPassword)
                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-floating"> 
            
                @Html.PasswordFor(model => model.NewPasswordConfirmation, new { @class = "form-control", @id="floatingPassword", placeholder="Password"})
                @Html.LabelFor(model => model.NewPasswordConfirmation)
                @Html.ValidationMessageFor(m => m.NewPasswordConfirmation, "", new { @class = "text-danger" })
            </div>
            <br />
            <button class="w-100 btn btn-lg btn-primary" type="submit">Смени паролата</button>
        }
    </div>
</div>

<script>
    const myModal = new bootstrap.Modal('#exampleModal');
    setTimeout(() => { myModal.show(); }, 0)
</script> 
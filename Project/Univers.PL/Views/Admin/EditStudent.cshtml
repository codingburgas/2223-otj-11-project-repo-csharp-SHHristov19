@model Univers.Models.Models.AdminModel

@{
    Layout = "../_AdminMenu.cshtml";
    TempData["Id"] = Model.UserId;
    TempData["Title"] = "Потребители";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

<style>
    body {
        background: #5349E3;
    }
</style>

@using (Html.BeginForm("EditChosenStudent", "Admin", FormMethod.Post))
{
    <div class="modal fade" id="exampleModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Редактиране на данни</h5>
                </div>
                <div class="modal-body">

                    @Html.HiddenFor(model => model.ChosenUser)
                    @Html.HiddenFor(model => model.UserId)
                    @Html.HiddenFor(model => model.EditStudent.Id)
                    @Html.HiddenFor(model => model.EditStudent.User.Id)
                    @Html.HiddenFor(model => model.EditStudent.User.Gender)
                    @Html.HiddenFor(model => model.EditStudent.FormOfEducation)

                    <div class="row">
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.FirstName, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.User.FirstName, new { @class="form-label" })
                            @Html.ValidationMessageFor(model => model.EditStudent.User.FirstName, "", new { @class = "text-danger" })
                        </div> 
                          
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.MiddleName, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.User.MiddleName)
                            @Html.ValidationMessageFor(model => model.EditStudent.User.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row"> 
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.LastName, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.User.LastName)
                            @Html.ValidationMessageFor(model => model.EditStudent.User.LastName, "", new { @class = "text-danger" })
                        </div>
                         
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.Username, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.User.Username)
                            @Html.ValidationMessageFor(model => model.EditStudent.User.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row"> 
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.Email, new { @class = "form-control", @id="floatingInput", placeholder="name@example.com"})
                            @Html.LabelFor(model => model.EditStudent.User.Email)
                            @Html.ValidationMessageFor(model => model.EditStudent.User.Email, "", new { @class = "text-danger" })
                        </div>
                         
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.Address, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.User.Address)
                            @Html.ValidationMessageFor(model => model.EditStudent.User.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row"> 
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.User.PhoneNumber, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.User.PhoneNumber)
                            @Html.ValidationMessageFor(model => model.EditStudent.User.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                         
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.Identity, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.Identity)
                            @Html.ValidationMessageFor(model => model.EditStudent.Identity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row"> 
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.Citizenship, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.Citizenship)
                            @Html.ValidationMessageFor(model => model.EditStudent.Citizenship, "", new { @class = "text-danger" })
                        </div>
                     
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.CountryOfBirth, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.CountryOfBirth)
                            @Html.ValidationMessageFor(model => model.EditStudent.CountryOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row"> 
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.MunicipalityOfBirth, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.MunicipalityOfBirth)
                            @Html.ValidationMessageFor(model => model.EditStudent.MunicipalityOfBirth, "", new { @class = "text-danger" })
                        </div>
                         
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.AreaOfBirth, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.AreaOfBirth)
                            @Html.ValidationMessageFor(model => model.EditStudent.AreaOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row"> 
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.CityOfBirth, new { @class = "form-control", @id="EditStudent_DateOfStarting", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.CityOfBirth)
                            @Html.ValidationMessageFor(model => model.EditStudent.CityOfBirth, "", new { @class = "text-danger" })
                        </div>
                         
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.DateOfBirth, new { @class = "form-control", @id="floatingInput", placeholder=" ", type = "date"})
                            @Html.LabelFor(model => model.EditStudent.DateOfBirth)
                            @Html.ValidationMessageFor(model => model.EditStudent.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.DateOfStarting, new { @class = "form-control", @id="floatingInput", type = "date"})
                            @Html.LabelFor(model => model.EditStudent.DateOfStarting)
                            @Html.ValidationMessageFor(model => model.EditStudent.DateOfStarting, "", new { @class = "text-danger" })
                        </div>
                         
                        <div class="form-floating col">
                            @Html.TextBoxFor(model => model.EditStudent.DateOfGraduate, new { @class = "form-control", @id="floatingInput", type = "date", placeholder=" "})
                            @Html.LabelFor(model => model.EditStudent.DateOfGraduate)
                            @Html.ValidationMessageFor(model => model.EditStudent.DateOfGraduate, "", new { @class = "text-danger" })
                        </div> 
                     
                    </div>
                </div>

                <div class="modal-footer">
                    @Html.ActionLink("Назад", "Students", "Admin", new { userId = $"{Model.UserId}" }, new { @class = "btn btn-secondary" })
                    <button class="btn btn-primary" type="submit">Запази</button>
                </div>

            </div>
        </div>
    </div>
} 

<script>
    const myModalAlternative = new bootstrap.Modal('#exampleModal')
    myModalAlternative.show()
     
</script>
@model Univers.Models.Models.AdminModel

@{
    Layout = "../_AdminMenu.cshtml";
    TempData["Id"] = Model.UserId;
    TempData["Title"] = "Потребители";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script> 

<style>
    body {
        background: #5349E3;
    }
</style>

@using (Html.BeginForm("AddUser", "Admin", FormMethod.Post))
{
    <div class="modal fade" id="exampleModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Добавяне на потребител</h5>
                </div>
            
                <div class="modal-body"> 

                    @Html.HiddenFor(model => model.UserId) 
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.FirstName, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.FirstName)
                        @Html.ValidationMessageFor(model => model.AddUser.FirstName, "", new { @class = "text-danger"})
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.MiddleName, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.MiddleName)
                        @Html.ValidationMessageFor(model => model.AddUser.MiddleName, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.LastName, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.LastName)
                        @Html.ValidationMessageFor(model => model.AddUser.LastName, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.Username, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.Username)
                        @Html.ValidationMessageFor(model => model.AddUser.Username, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.PasswordFor(model => model.AddUser.Password, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.Password)
                        @Html.ValidationMessageFor(model => model.AddUser.Password, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.PasswordFor(model => model.AddUser.PasswordConfirmation, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.PasswordConfirmation)
                        @Html.ValidationMessageFor(model => model.AddUser.PasswordConfirmation, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.Email, new { @class = "form-control", @id="floatingInput", placeholder="name@example.com"})
                        @Html.LabelFor(model => model.AddUser.Email)
                        @Html.ValidationMessageFor(model => model.AddUser.Email, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.Address, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.Address)
                        @Html.ValidationMessageFor(model => model.AddUser.Address, "", new { @class = "text-danger" })
                    </div>
                    
                    <br />
                    
                    <div class="form-floating">
                        @Html.TextBoxFor(model => model.AddUser.PhoneNumber, new { @class = "form-control", @id="floatingInput", placeholder=" "})
                        @Html.LabelFor(model => model.AddUser.PhoneNumber)
                        @Html.ValidationMessageFor(model => model.AddUser.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    
                    <br /> 

                    <div class="form-floating">
                       
                        @Html.DropDownListFor(model => model.AddUser.Gender, new List<SelectListItem>
                        { 
                            new SelectListItem { Text = "Мъж"},
                            new SelectListItem { Text = "Жена"}
                    }, new {@class = "form-select"})
                        @Html.LabelFor(model => model.AddUser.Gender)
                    </div>

                    <br />

                    <div class="form-floating">
                        @Html.DropDownListFor(model => model.AddUser.Staff.Role, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Преподавател",  },
                            new SelectListItem { Text = "Тютор", },
                            new SelectListItem { Text = "Декан", },
                            new SelectListItem { Text = "Ректор", },
                            new SelectListItem { Text = "Администратор", },
                    }, new {@class = "form-select"})
                        @Html.Label("Роля")
                    </div>

                </div>

                <div class="modal-footer">
                    @Html.ActionLink("Назад", "Users", "Admin", new { userId = $"{Model.UserId}" }, new { @class = "btn btn-secondary" })
                    <button class="btn btn-primary" type="submit">Запази</button>
                </div>
        
            </div>
        </div>
    </div>
}
<script>
    const myModalAlternative = new bootstrap.Modal('#exampleModal')
    myModalAlternative.show()
</script>